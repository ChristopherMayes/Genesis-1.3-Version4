#ifndef __GENESIS_EFIELD__
#define __GENESIS_EFIELD__

#include <vector>
#include <iostream>
#include <string>
#include <complex>

//#include "readfieldHDF5.h"
//#include "Undulator.h"
//#include "Beam.h"
//#include "FieldSolver.h"

using namespace std;

extern const double vacimp;
extern const double eev;



class EField{
 public:
   EField();
   virtual ~EField();
   //   void init(int, int, double, double);
   //   void track(double, Beam *, Undulator *);
   //   bool getLLGridpoint(double, double, double *, double *,int *);
   //   void setStepsize(double);
   //   vector< vector< complex<double> > > field;
   //   double xlambda,dgrid,xks,gridmax,dz_save;
   //   int ngrid, first;  // first points to first slice due to slippage

 private:
   //   FieldSolver solver;
};

#endif
